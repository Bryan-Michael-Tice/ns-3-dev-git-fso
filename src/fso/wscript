# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('fso', ['mobility', 'propagation', 'antenna'])
    module.source = [
        'model/fso-channel.cc',
        'model/fso-phy.cc',
        'model/fso-error-model.cc',
        'model/fso-propagation-loss-model.cc',
        'model/fso-signal-parameters.cc',
        'model/fso-down-link-scintillation-index-model.cc',
        'model/fso-mean-irradiance-model.cc',
        'model/fso-free-space-loss-model.cc',
        'model/laser-antenna-model.cc',
        'model/optical-rx-antenna-model.cc',
        'model/fso-net-device.cc',
        'model/fso-mac.cc',
        'helper/fso-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('fso')
    module_test.source = [
        'test/fso-propagation-loss-test-suite.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'fso'
    headers.source = [
        'model/fso-channel.h',
        'model/fso-phy.h',
        'model/fso-error-model.h',
        'model/fso-propagation-loss-model.h',
        'model/fso-signal-parameters.h',
        'model/fso-down-link-scintillation-index-model.h',
        'model/fso-mean-irradiance-model.h',
        'model/fso-free-space-loss-model.h',
        'model/laser-antenna-model.h',
        'model/optical-rx-antenna-model.h',
        'model/fso-net-device.h',
        'model/fso-mac.h',
        'helper/fso-helper.h',
        ]

    if bld.env['ENABLE_GSL']:
        module.use.extend(['GSL', 'GSLCBLAS', 'M'])
        module_test.use.extend(['GSL', 'GSLCBLAS', 'M'])

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

